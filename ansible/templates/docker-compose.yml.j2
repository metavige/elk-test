elasticsearch:
  restart: always
  image: elasticsearch
  ports:
    - 9200:9200
    - 9300:9300
  volumes:
    - /opt/elasticsearch:/data
  command: elasticsearch -Dnetwork.bind_host=0.0.0.0 -Dnetwork.publish_host={{ ansible_default_ipv4.address }} -Dcluster.name=elk-ccasd-cluster1 -Dnode.master=true -Dnode.data=true -Ddiscovery.zen.ping.multicast.enabled=false -Ddiscovery.zen.ping_timeout=10s -Ddiscovery.zen.minimum_master_nodes=1 -Ddiscovery.zen.ping.unicast.hosts={% for host in groups['all'] %}{% if loop.last -%}{{hostvars[host]['ansible_eth0']['ipv4']['address'] }}{%- else -%}{{hostvars[host]['ansible_eth0']['ipv4']['address'] }},{%- endif -%}{% endfor %}

kibana:
  restart: always
  image: kibana
  ports:
    - 5601:5601
  volumes:
    - ${PWD}/config/kibana:/opt/kibana/config
  links:
    - elasticsearch

redis:
  restart: always
  image: redis
  environment:
    - LOGSPOUT=ignore
  ports:
    - 6379:6379

logstash-indexer:
  restart: always
  image: logstash
  command: logstash agent -f /config/logstash.conf
  volumes:
    - ${PWD}/config/logstash/config:/config
    - ${PWD}/config/logstash/patterns:/opt/logstash/patterns
  environment:
    - LOGSPOUT=ignore
  links:
    - redis
    - elasticsearch

nginx:
  build: ${PWD}/config/nginx
  restart: always
  ports:
    - 80:80
