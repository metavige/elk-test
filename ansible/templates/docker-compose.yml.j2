version: '2'
services:
  elasticsearch:
    restart: always
    image: elasticsearch
    ports:
      - 9200:9200
      - 9300:9300
    volumes:
      - ${PWD}/config/elasticsearch/config:/usr/share/elasticsearch/config
      - /opt/elasticsearch:/data
    command: elasticsearch -Dcluster.name=elk-es-cluster1 -Dnode.master=true -Dnode.data=true -Ddiscovery.zen.ping.multicast.enabled=false -Ddiscovery.zen.ping_timeout=30s -Ddiscovery.zen.minimum_master_nodes=1 -Ddiscovery.zen.ping.unicast={% for host in groups['all'] %}{% if loop.last -%}{{hostvars[host]['ansible_eth0']['ipv4']['address'] }}:9301{%- else -%}{{hostvars[host]['ansible_eth0']['ipv4']['address'] }}:9301,{%- endif -%}{% endfor %}

  kibana:
    restart: always
    image: kibana
    ports:
      - 5601:5601
    volumes:
      - ${PWD}/config/kibana:/opt/kibana/config
    links:
      - elasticsearch

  redis:
    restart: always
    image: redis
    environment:
      - LOGSPOUT=ignore
    ports:
      - 6379:6379

  logstash-indexer:
    restart: always
    image: logstash
    command: logstash agent -f /config/logstash.conf
    volumes:
      - ${PWD}/config/logstash/config:/config
      - ${PWD}/config/logstash/patterns:/opt/logstash/patterns
    environment:
      - LOGSPOUT=ignore
    links:
      - redis
      - elasticsearch

  nginx:
    build:
      dockerfile: ${PWD}/config/nginx/Dockerfile
      context: ${PWD}/config/nginx
    restart: always
    ports:
      - 80:80
