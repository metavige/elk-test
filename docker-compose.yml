elasticsearch:
  restart: on-failure
  image: elasticsearch
  ports:
    - 9200:9200
    - 9300:9300
  environment:
    - LOGSPOUT=ignore
  volumes:
    - ${PWD}/config/elasticsearch/config:/usr/share/elasticsearch/config

kibana:
  restart: on-failure
  image: kibana
  ports:
    - 5601:5601
  environment:
    - LOGSPOUT=ignore
  volumes:
    - ${PWD}/config/kibana:/opt/kibana/config
  links:
    - elasticsearch

redis:
  restart: on-failure
  image: redis
  environment:
    - LOGSPOUT=ignore
  ports:
    - 6379:6379

logstash-config:
  image: logstash-config
  command: /bin/true

indexer:
  restart: on-failure
  image: logstash
  command: -f /etc/logstash/conf.d
  volumes_from:
    - logstash-config
  environment:
    - LOGSPOUT=ignore
  ports:
    - 5000:5000
  links:
    - redis
    - elasticsearch

# filter:
#   image: logstash
#   command: logstash agent -f /config/logstash.conf
#   ports:
#     - 5000:5000
#   volumes:
#     - ${PWD}/config/logstash/filter-config:/config
#   environment:
#     - LOGSPOUT=ignore
#   links:
#     - redis

# collector:
#   image: gliderlabs/logspout
#   command: syslog+tcp://filter:5000
#   ports:
#     - 8000:8000
#   environment:
#     - LOGSPOUT=ignore
#   volumes:
#     - /var/run/docker.sock:/tmp/docker.sock
#   links:
#     - filter

collector:
  restart: on-failure
  image: logstash-collector
  command: redis://redis?key=logstash
  ports:
    - 8000:8000
  volumes:
    - /var/run/docker.sock:/var/run/docker.sock:ro
  links:
    - redis
